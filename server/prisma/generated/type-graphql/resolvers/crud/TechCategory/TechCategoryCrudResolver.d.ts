import { GraphQLResolveInfo } from "graphql";
import { AggregateTechCategoryArgs } from "./args/AggregateTechCategoryArgs";
import { CreateManyTechCategoryArgs } from "./args/CreateManyTechCategoryArgs";
import { CreateTechCategoryArgs } from "./args/CreateTechCategoryArgs";
import { DeleteManyTechCategoryArgs } from "./args/DeleteManyTechCategoryArgs";
import { DeleteTechCategoryArgs } from "./args/DeleteTechCategoryArgs";
import { FindFirstTechCategoryArgs } from "./args/FindFirstTechCategoryArgs";
import { FindManyTechCategoryArgs } from "./args/FindManyTechCategoryArgs";
import { FindUniqueTechCategoryArgs } from "./args/FindUniqueTechCategoryArgs";
import { GroupByTechCategoryArgs } from "./args/GroupByTechCategoryArgs";
import { UpdateManyTechCategoryArgs } from "./args/UpdateManyTechCategoryArgs";
import { UpdateTechCategoryArgs } from "./args/UpdateTechCategoryArgs";
import { UpsertTechCategoryArgs } from "./args/UpsertTechCategoryArgs";
import { TechCategory } from "../../../models/TechCategory";
import { AffectedRowsOutput } from "../../outputs/AffectedRowsOutput";
import { AggregateTechCategory } from "../../outputs/AggregateTechCategory";
import { TechCategoryGroupBy } from "../../outputs/TechCategoryGroupBy";
export declare class TechCategoryCrudResolver {
    techCategory(ctx: any, info: GraphQLResolveInfo, args: FindUniqueTechCategoryArgs): Promise<TechCategory | null>;
    findFirstTechCategory(ctx: any, info: GraphQLResolveInfo, args: FindFirstTechCategoryArgs): Promise<TechCategory | null>;
    techCategories(ctx: any, info: GraphQLResolveInfo, args: FindManyTechCategoryArgs): Promise<TechCategory[]>;
    createTechCategory(ctx: any, info: GraphQLResolveInfo, args: CreateTechCategoryArgs): Promise<TechCategory>;
    createManyTechCategory(ctx: any, info: GraphQLResolveInfo, args: CreateManyTechCategoryArgs): Promise<AffectedRowsOutput>;
    deleteTechCategory(ctx: any, info: GraphQLResolveInfo, args: DeleteTechCategoryArgs): Promise<TechCategory | null>;
    updateTechCategory(ctx: any, info: GraphQLResolveInfo, args: UpdateTechCategoryArgs): Promise<TechCategory | null>;
    deleteManyTechCategory(ctx: any, info: GraphQLResolveInfo, args: DeleteManyTechCategoryArgs): Promise<AffectedRowsOutput>;
    updateManyTechCategory(ctx: any, info: GraphQLResolveInfo, args: UpdateManyTechCategoryArgs): Promise<AffectedRowsOutput>;
    upsertTechCategory(ctx: any, info: GraphQLResolveInfo, args: UpsertTechCategoryArgs): Promise<TechCategory>;
    aggregateTechCategory(ctx: any, info: GraphQLResolveInfo, args: AggregateTechCategoryArgs): Promise<AggregateTechCategory>;
    groupByTechCategory(ctx: any, info: GraphQLResolveInfo, args: GroupByTechCategoryArgs): Promise<TechCategoryGroupBy[]>;
}
