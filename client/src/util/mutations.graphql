mutation MoveFilesFromTemp($filenames: [String!]!) {
  moveFilesFromTemp(filenames: $filenames)
}
mutation UploadAndSketchImageDownloadables(
  $image: Upload!
  $isEdit: Boolean = false
  $downloadables: [Upload!]!
) {
  uploadSingleFile(file: $image, isEdit: $isEdit)
  uploadFilesToZip(files: $downloadables, isEdit: $isEdit)
}
mutation AnswerMessage(
  $from: String!
  $message: String!
  $subject: String!
  $to: String!
  $messageId: String!
) {
  answerMessage(
    data: {
      from: $from
      message: $message
      to: $to
      subject: $subject
      messageId: $messageId
    }
  )
}
mutation UploadFile($file: Upload!, $isEdit: Boolean = false) {
  uploadSingleFile(file: $file, isEdit: $isEdit)
}
mutation UploadFiles($files: [Upload!]!, $isTemp: Boolean = true) {
  uploadMultipleFiles(files: $files, isTemp: $isTemp)
}
mutation UploadFilesToZip($files: [Upload!]!, $isEdit: Boolean! = true) {
  uploadFilesToZip(files: $files, isEdit: $isEdit)
}
mutation DeleteFile($filename: String!, $isTemp: Boolean! = true) {
  deleteFile(filename: $filename, isTemp: $isTemp)
}
mutation DeleteFiles($filenames: [String!]!, $isTemp: Boolean! = true) {
  deleteFiles(filenames: $filenames, isTemp: $isTemp)
}
mutation ConfirmEmail($code: Int!, $email: String!) {
  confirmEmail(code: $code, email: $email)
}
mutation Login($email: String!, $password: String!) {
  login(data: { email: $email, password: $password }) {
    token
  }
}

mutation Logout {
  logout
}

mutation SubmitAdmin(
  $email: String!
  $password: String!
  $fname: String!
  $lname: String!
  $linkedIn: String!
  $whatsapp: String!
  $instagram: String!
  $skype: String!
  $github: String!
  $heroImage: String!
  $resumes: [String!]!
) {
  createAdmin(
    data: {
      email: $email
      password: $password
      fname: $fname
      lname: $lname
      linkedIn: $linkedIn
      whatsapp: $whatsapp
      instagram: $instagram
      github: $github
      skype: $skype
      heroImage: $heroImage
      resumes: { set: $resumes }
    }
  ) {
    id
    email
    fname
    lname
    resumes
  }
}
# // ##################################
# // ############### Create Mutations
# // ##################################

mutation CreateAbout($title: String!, $body: String!, $adminEmail: String!) {
  createAbout(
    data: {
      title: $title
      body: $body
      admin: { connect: { email: $adminEmail } }
    }
  ) {
    id
    title
    body
  }
}
mutation CreateMessage(
  $body: String!
  $subject: String!
  $from: String!
  $adminEmail: String!
  $files: String!
) {
  createNewMessage(
    adminEmail: $adminEmail
    data: {
      subject: $subject
      from: $from
      body: $body
      files: $files
      admin: { connect: { email: "" } }
    }
  ) {
    id
  }
}

mutation CreateStack($image: String!, $title: String!, $email: String!) {
  createStack(
    data: {
      title: $title
      image: $image
      admin: { connect: { email: $email } }
    }
  ) {
    id
  }
}

mutation CreateProjectWithRelations(
  $name: String!
  $summary: String!
  $image: String!
  $github_url: String!
  $app_url: String!
  $type: String!
  $techCategories: [TechCategoryCreateInput_PWNR!]!
  $questions: [QuestionCreateInput_PWNR!]!
  $sketches: [SketchCreateInput_PWNR!]!
) {
  createProjectWithNestedRelations(
    data: {
      name: $name
      summary: $summary
      type: $type
      image: $image
      github_url: $github_url
      app_url: $app_url
      techCategories: $techCategories
      questions: $questions
      sketches: $sketches
    }
  )
}
mutation CreateProject(
  $for: String
  $name: String!
  $image: String!
  $type: String!
  $github_url: String!
  $app_url: String!
  $summary: String!
) {
  createProject(
    data: {
      name: $name
      image: $image
      type: $type
      github_url: $github_url
      app_url: $app_url
      summary: $summary
      admin: { connect: { email: $for } }
    }
  ) {
    id
    name
    image
    type
    github_url
    app_url
    summary
  }
}

mutation CreateManySketches($data: [SketchCreateManyInput!]!) {
  createManySketch(data: $data) {
    count
  }
}

mutation CreateSketch(
  $projectId: String!
  $summary: String!
  $description: String!
  $downloadables: String!
  $image: String!
  $title: String!
) {
  createSketch(
    data: {
      title: $title
      description: $description
      summary: $summary
      downloadables: $downloadables
      image: $image
      project: { connect: { id: $projectId } }
    }
  ) {
    id
    title
    summary
    description
    downloadables
    image
    project_id
  }
}
mutation CreateTechCategory($name: String!, $projectId: String!) {
  createTechCategory(
    data: { name: $name, project: { connect: { id: $projectId } } }
  ) {
    id
    name
  }
}
mutation CreateTech($name: String!, $techCategoryId: String!) {
  createTech(
    data: { name: $name, tech_categories: { connect: { id: $techCategoryId } } }
  ) {
    id
    name
  }
}
mutation CreateQuestion(
  $question: String!
  $answer: String!
  $projectId: String!
) {
  createQuestion(
    data: {
      question: $question
      answer: $answer
      project: { connect: { id: $projectId } }
    }
  ) {
    id
    question
    answer
  }
}
# // // ##################################
# // // ############### Update Mutations
# // // ##################################

mutation VerifyPassword($oldPassword: String!) {
  verifyPassword(data: { oldPassword: $oldPassword })
}
mutation ForgotPassword($email: String!) {
  forgotPassword(email: $email)
}
mutation ResetPassword(
    $email: String!
    $newPassword: String!
    $code: Int!
    $needCode: Boolean! = true
  ) {
    resetPassword(
      email: $email
      newPassword: $newPassword
      code: $code
      needCode: $needCode
    )
}
mutation ChangePassword(
  $email: String!
  $newPassword: String!
  $needCode: Boolean! = false
) {
  resetPassword(
    email: $email
    newPassword: $newPassword
    needCode: $needCode
  )
}
mutation UpdateResumes(
    $oldResumes: [String!]!
    $newResumes: [Upload!]!
  ){
    deleteFiles(filenames: $oldResumes, isTemp: false)
    uploadMultipleFiles(files: $newResumes, isTemp: false)
  }
mutation updateAdmin($data: AdminUpdateInput!, $email:String!) {
  updateAdmin(data: $data, where: { email: $email }) {
    id
  }
}
mutation UpdateAboutTitle($id: String!, $title: String!) {
  updateAbout(data: { title: { set: $title } }, where: { id: $id }) {
    id
  }
}
mutation UpdateAboutBody($id: String!, $body: String!) {
  updateAbout(data: { body: { set: $body } }, where: { id: $id }) {
    id
  }
}
mutation UpdateMessageReadStatus($id: String!) {
  updateMessage(data: { read_status: { set: true } }, where: { id: $id }) {
    id
  }
}
mutation UpdateMessageAnswerStatus($id: String!, $date: DateTime!) {
  updateMessage(
    data: { answer_status: { set: true }, answeredAt: { set: $date } }
    where: { id: $id }
  ) {
    id
  }
}

mutation UpdateStack($id: String!, $image: String!, $title: String!) {
  updateStack(
    data: { title: { set: $title }, image: { set: $image } }
    where: { id: $id }
  ) {
    id
  }
}

mutation UpdateProjectSummary($id: String!, $summary: String) {
  updateProject(data: { summary: { set: $summary } }, where: { id: $id }) {
    summary
  }
}
mutation UpdateProjectType($id: String!, $type: String) {
  updateProject(data: { type: { set: $type } }, where: { id: $id }) {
    type
  }
}
mutation UpdateImage(
  $file: Upload!
  $prevname: String!
  $isEdit: Boolean = true
) {
  updateImage(file: $file, prevname: $prevname, isEdit: $isEdit)
}
mutation UpdateProjectAppUrl($id: String!, $app_url: String) {
  updateProject(data: { app_url: { set: $app_url } }, where: { id: $id }) {
    app_url
  }
}
mutation UpdateProjectGitHubUrl($id: String!, $github_url: String!) {
  updateProject(
    data: { github_url: { set: $github_url } }
    where: { id: $id }
  ) {
    github_url
  }
}
mutation UpdateProjectName($id: String!, $name: String) {
  updateProject(data: { name: { set: $name } }, where: { id: $id }) {
    name
  }
}
mutation UpdateSketchDescription($id: String!, $description: String!) {
  updateSketch(
    data: { description: { set: $description } }
    where: { id: $id }
  ) {
    id
    title
    description
    summary
    image
    downloadables
  }
}

mutation UpdateZipFile(
  $files: [Upload!]!
  $prevname: String!
  $isTemp: Boolean!
) {
  updateZipFile(files: $files, prevname: $prevname, isTemp: $isTemp)
}
mutation UpdateSketchSummary($id: String!, $summary: String!) {
  updateSketch(data: { summary: { set: $summary } }, where: { id: $id }) {
    id
    title
    description
    summary
    image
    downloadables
  }
}
mutation UpdateTechCategory($name: String!, $techCategoryId: String!) {
  updateTechCategory(
    data: { name: { set: $name } }
    where: { id: $techCategoryId }
  ) {
    id
    name
    techs {
      id
      name
    }
  }
}
mutation UpdateQuestion($id: String!, $question: String!, $answer: String!) {
  updateQuestion(
    data: { question: { set: $question }, answer: { set: $answer } }
    where: { id: $id }
  ) {
    id
    question
    answer
  }
}
# // // ##################################
# // // ############### Update Mutations
# // // ##################################

mutation DeleteAbout($id: String!) {
  deleteAbout(where: { id: $id }) {
    id
  }
}
mutation DeleteMessage($id: String!) {
  deleteMessage(where: { id: $id }) {
    id
  }
}

mutation Deletestack($id: String!) {
  deleteStack(where: { id: $id }) {
    id
    image
    title
  }
}

mutation DeleteProject($id: String!) {
  deleteProject(where: { id: $id }) {
    id
  }
}

mutation DeleteSketch($id: String!) {
  deleteSketch(where: { id: $id }) {
    id
  }
}

mutation DeleteTechCategory($id: String!) {
  deleteTechCategory(where: { id: $id }) {
    id
  }
}

mutation DeleteTech($id: String!) {
  deleteTech(where: { id: $id }) {
    id
  }
}

mutation DeleteQuestion($id: String!) {
  deleteQuestion(where: { id: $id }) {
    id
  }
}
